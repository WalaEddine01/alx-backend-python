pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'yourdockerhubusername/messaging_app:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-credentials', 
                    url: 'https://github.com/your-username/alx-backend-python.git'
                sh 'git branch'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                cd messaging_app
                python3 -m venv venv
                source venv/bin/activate
                pip3 install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                source venv/bin/activate
                pytest --junitxml=test-results.xml
                '''
            }
        }

        stage('Generate Report') {
            steps {
                junit 'messaging_app/test-results.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                cd messaging_app
                docker build -t $DOCKER_IMAGE .
                '''
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub', 
                    usernameVariable: 'DOCKER_USERNAME', 
                    passwordVariable: 'DOCKER_PASSWORD'
                )]) {
                    sh '''
                    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
                    docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }
}
